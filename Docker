#Docker:

docker info                     # information about docker
docker image ls                 # displays docker images
docker container ls             # displays running containers
docker inspect <cont-ID>        # shows all the info of a container
docker search <image-name>      # search for image in docker registry
docker pull <image-name>        # pulling a pre-built image (ID or name)
docker rm <cont-ID>             # removes a container
docker rmi <cont-ID>            # removes an image
docker rmi -f <cont-ID>         # forces removal
docker run <cont-ID>            # creates and starts a container in one operation.
docker run -p 8000:8000 <cont-ID> # connects app to a port
docker stop <cont-ID>           # stopping container
docker start <cont-ID>          # starts container
docker commit <cont-ID> <name>  # save the state of the container as image
docker history <cont-ID>        # history of the images
docker login                    # log into registry
docker push <cont-ID>           # push image to registry
docker exec                     # execute a command in container
docker exec -it <ID> /bin/sh    # enter shell of a running container (-it attach newshell process)
docker-compose exec db psql -h localhost -U postgres --dbname=postgres  # enter database within a container
docker build .                        # creates image from dockerfile
docker build -t github-trending-api . # creates an image and gives a tag name
docker save my_image:my_tag | gzip > my_image.tar.gz   # save an image
docker load < my_image.tar.gz                          # load image from file

docker run <image> env                # returns env vars of image

docker run $(docker ps -a -q)         # deletes all stopped containers
docker rmi $(docker images -q) -f     # deletes ALL docker images
